/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/pointing.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        mouse_click: mouse_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "MOUSE_CLICK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                  &kp Q  &kp W  &kp E  &kp R          &kp T        &kp Y          &kp U      &kp I      &kp O    &kp P         &kp ENTER
&mt LEFT_SHIFT CAPSLOCK  &kp A  &kp S  &kp D  &kp F          &kp G        &kp H          &kp J      &kp K      &kp L    &kp SEMI      &mt RIGHT_SHIFT APOS
&kp LEFT_WIN             &kp Z  &kp X  &kp C  &kp V          &kp B        &kp N          &kp M      &kp COMMA  &kp DOT  &kp QUESTION  &kp ESC
                                       &mo 1  &kp BACKSPACE  &kp LCTRL    &kp RIGHT_ALT  &kp SPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ENTER    &kp SLASH     &kp N7        &kp N8        &kp N9        &kp N5       &kp K_SCROLL_UP    &kp LEFT_ARROW  &kp PAGE_UP    &kp RIGHT  &kp DEL       &kp ENTER
&kp LA(TAB)  &kp N0        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COMMA    &kp K_SCROLL_DOWN  &kp HOME        &kp PAGE_DOWN  &kp END    &kp NUMBER_0  &trans
&kp DOT      &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS    &trans             &trans          &trans         &trans     &trans        &trans
                                         &kp LGUI      &trans        &kp SPACE    &kp RET            &trans          &mo 2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp PERCENT   &kp AT          &kp UP_ARROW      &kp DLLR       &kp HASH             &kp EXCLAMATION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND  &kp CARET  &kp DEL
&kp LEFT_SHIFT  &kp C_VOL_UP  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT      &kp C_BRI_UP         &kp MINUS        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL      &kp COLON  &kp BACKSLASH
&kp RIGHT_GUI   &kp C_VOL_DN  &kp C_PREV      &kp C_PLAY_PAUSE  &kp C_NEXT     &kp C_BRI_DEC        &kp UNDER        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS       &kp TILDE  &kp PIPE
                                              &mo 1             &kp BACKSPACE  &kp RIGHT_CONTROL    &kp LEFT_ALT     &kp SPACE             &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F1      &kp F2  &kp F3        &kp F4        &kp F5        &kp F6        &kp F7  &kp F8     &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &trans  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_PRV    &bt BT_NXT    &trans  &trans     &trans  &trans   &trans   &trans
&trans      &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans        &trans  &kp LG(L)  &trans  &trans   &trans   &trans
                                  &trans        &trans        &trans        &trans  &trans     &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
